<Window
	x:Class="NV.CT.NanoConsole.View.English.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:NV.CT.NanoConsole.View.English"
	xmlns:localHome="clr-namespace:NV.CT.NanoConsole.View.English"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
	Title="MainConsole"
	d:DesignHeight="900"
	d:DesignWidth="1800"
	Background="#16162B"
	ResizeMode="NoResize"
	WindowState="Maximized"
	WindowStyle="None"
	mc:Ignorable="d">
	<Window.Resources>
		<Style
			x:Key="ConsoleMaterialDesignRaisedButton"
			TargetType="{x:Type ButtonBase}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource BaseTabBackBrush}" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="TextBlock.FontWeight" Value="Medium" />
			<Setter Property="TextBlock.FontSize" Value="14" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="2,4,2,4" />
			<Setter Property="Height" Value="32" />
			<Setter Property="wpf:ElevationAssist.Elevation" Value="Dp2" />
			<Setter Property="wpf:ButtonAssist.CornerRadius" Value="5" />
			<Setter Property="wpf:RippleAssist.Feedback" Value="White" />
			<Setter Property="wpf:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
			<Setter Property="wpf:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
			<Setter Property="wpf:ButtonProgressAssist.IsIndicatorVisible" Value="False" />
			<Setter Property="wpf:ButtonProgressAssist.Opacity" Value=".4" />
			<Setter Property="wpf:ButtonAssist.IsEnable" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Mode=TwoWay}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ButtonBase}">
						<Grid>
							<Border
								x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{Binding Path=(wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
								Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ElevationAssist.Elevation), Converter={x:Static converters:ShadowConverter.Instance}}" />
							<ProgressBar
								x:Name="ProgressBar"
								Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}"
								Height="{TemplateBinding Height}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorBackground)}"
								BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorBackground)}"
								Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorForeground)}"
								IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IsIndeterminate)}"
								Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Maximum)}"
								Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Minimum)}"
								Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Opacity)}"
								Style="{DynamicResource MaterialDesignLinearProgressBar}"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
								Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Value)}">
								<ProgressBar.Clip>
									<MultiBinding Converter="{StaticResource BorderClipConverter}">
										<Binding
											ElementName="border"
											Path="ActualWidth" />
										<Binding
											ElementName="border"
											Path="ActualHeight" />
										<Binding
											ElementName="border"
											Path="CornerRadius" />
										<Binding
											ElementName="border"
											Path="BorderThickness" />
									</MultiBinding>
								</ProgressBar.Clip>
							</ProgressBar>
							<wpf:Ripple
								Padding="{TemplateBinding Padding}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentStringFormat="{TemplateBinding ContentStringFormat}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Focusable="False"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
								<wpf:Ripple.Clip>
									<MultiBinding Converter="{StaticResource BorderClipConverter}">
										<Binding
											ElementName="border"
											Path="ActualWidth" />
										<Binding
											ElementName="border"
											Path="ActualHeight" />
										<Binding
											ElementName="border"
											Path="CornerRadius" />
										<Binding
											ElementName="border"
											Path="BorderThickness" />
									</MultiBinding>
								</wpf:Ripple.Clip>
							</wpf:Ripple>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" Value="0.38" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style
			BasedOn="{StaticResource ConsoleMaterialDesignRaisedButton}"
			TargetType="{x:Type Button}">
			<Setter Property="FontSize" Value="14px" />
			<Setter Property="Foreground" Value="{StaticResource BaseForegroundColor}" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Background" Value="{StaticResource BaseBackgroundColor}" />
			<Setter Property="wpf:ButtonAssist.IsEnable" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Mode=TwoWay}" />
		</Style>
	</Window.Resources>
	<AdornerDecorator>
		<Grid Name="grdMainContent1">
			<Grid.RowDefinitions>
				<RowDefinition Height="40" />
				<RowDefinition Height="*" />
				<RowDefinition Height="40" />
			</Grid.RowDefinitions>

			<local:HeaderControl
				x:Name="header"
				Grid.Row="0" />

			<ContentControl
				Name="controlContainer"
				Grid.Row="1"
				Grid.Column="0"
				HorizontalContentAlignment="Stretch"
				VerticalContentAlignment="Stretch"
				Background="#05050F"
				BorderThickness="5"
				Content="{Binding ContentContainer, Mode=TwoWay}" />

			<local:FooterControl
				x:Name="footer"
				Grid.Row="2" />
		</Grid>
	</AdornerDecorator>
</Window>