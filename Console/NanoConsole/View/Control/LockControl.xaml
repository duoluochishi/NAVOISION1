<UserControl x:Class="NV.CT.NanoConsole.View.Control.LockControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NV.CT.NanoConsole.View.Control"
             mc:Ignorable="d" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:model="clr-namespace:NV.CT.NanoConsole.Model"
             xmlns:md="clr-namespace:MaterialDesignThemes.Wpf.Controls.MarkableTextBox;assembly=MaterialDesignThemes.Wpf"
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<Style
			x:Key="AddEmergencyGlintButton"
			BasedOn="{StaticResource ToolbarButton}"
			TargetType="Button">
			<Setter Property="Width" Value="100" />
			<Setter Property="Height" Value="85" />
			<Style.Triggers>
				<Trigger Property="Button.IsMouseOver" Value="true">
					<Setter Property="Content">
						<Setter.Value>
							<Path
								VerticalAlignment="Center"
								Fill="White"
								Stretch="Fill"
								Style="{StaticResource Emergency}" />
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="Button.IsMouseOver" Value="false">
					<Setter Property="Content">
						<Setter.Value>
							<Path
								VerticalAlignment="Center"
								Fill="#FFA63F"
								Stretch="Fill"
								Style="{StaticResource Emergency}" />
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate
			x:Key="ButtonTemplate"
			TargetType="{x:Type Button}">
			<Border
				x:Name="Border"
				Background="{TemplateBinding Background}"
				BorderThickness="2"
				CornerRadius="15"
				TextBlock.Foreground="White">
				<!--  设置控件的边框，圆角，背景色，字体颜色  -->
				<ContentPresenter
					Margin="{TemplateBinding Padding}"
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<!--  显示控件的内容  -->
				</ContentPresenter>
			</Border>
		</ControlTemplate>

		<Style
			x:Key="ProtocolButtonStyle"
			BasedOn="{StaticResource MaterialDesignRaisedButton}"
			TargetType="{x:Type Button}">
			<Setter Property="Height" Value="40" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Background" Value="#1665D8" />
			<Setter Property="wpf:ButtonAssist.IsEnable" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Mode=TwoWay}" />
			<Setter Property="Opacity" Value="1" />
			<Setter Property="Border.CornerRadius" Value="100" />
		</Style>

		<Style
			x:Key="MyPasswordBox"
			TargetType="{x:Type PasswordBox}">
			<Setter Property="wpf:ControlAttachProperty.CornerRadius" Value="4" />
			<Setter Property="Height" Value="34" />
			<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplateDownSide}" />
			<Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
			<Setter Property="SelectionBrush" Value="{StaticResource TextSelectionBrush}" />
			<Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
			<Setter Property="FontSize" Value="{StaticResource FontSize}" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Background" Value="{StaticResource BaseBackgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource TextForeground}" />
			<Setter Property="Padding" Value="6,4,6,4" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
			<Setter Property="wpf:ControlAttachProperty.FocusBorderBrush" Value="{StaticResource FocusBorderBrush}" />
			<Setter Property="wpf:ControlAttachProperty.MouseOverBorderBrush" Value="{StaticResource MouseOverBorderBrush}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<!--  英 ['kærət]  美 ['kærət]  插入符号  -->
			<Setter Property="CaretBrush" Value="{StaticResource TextForeground}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type PasswordBox}">
						<Grid x:Name="PART_Root">
							<Border
								x:Name="Bg"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding wpf:ControlAttachProperty.CornerRadius}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<Grid x:Name="PART_InnerGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<!--  Label区域  -->
								<ContentControl
									x:Name="Label"
									Margin="1"
									Content="{TemplateBinding wpf:ControlAttachProperty.Label}"
									Template="{TemplateBinding wpf:ControlAttachProperty.LabelTemplate}" />
								<!--  内容区域  -->
								<ScrollViewer
									x:Name="PART_ContentHost"
									Grid.Column="1"
									Margin="{TemplateBinding Padding}"
									Padding="{TemplateBinding Padding}"
									VerticalAlignment="Stretch"
									VerticalContentAlignment="Center"
									Background="{x:Null}"
									BorderThickness="0"
									IsTabStop="False" />
								<!--  水印  -->
								<TextBlock
									x:Name="Message"
									Grid.Column="1"
									Margin="5,2,5,2"
									Padding="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									IsHitTestVisible="False"
									Opacity="{StaticResource WatermarkOpacity}"
									Text="{TemplateBinding wpf:ControlAttachProperty.Watermark}"
									Visibility="Collapsed" />
								<!--  附加内容区域  -->
								<Border
									x:Name="PART_AttachContent"
									Grid.Column="2"
									Margin="1"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<ContentControl
										VerticalAlignment="Top"
										VerticalContentAlignment="Top"
										Template="{TemplateBinding wpf:ControlAttachProperty.AttachContent}" />
								</Border>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<!--  显示水印  -->
							<DataTrigger
								Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
								Value="">
								<Setter TargetName="Message" Property="Visibility" Value="Visible" />
							</DataTrigger>
							<!--<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" Value="{Binding Path=(wpf:ControlAttachProperty.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" Value="{Binding Path=(wpf:ControlAttachProperty.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
							</Trigger>-->
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource DisableOpacity}" />
							</Trigger>
							<!--  只读时，禁用PART_AttachContent  -->
							<!--<Trigger Property="IsReadOnly" Value="True">
								<Setter TargetName="PART_AttachContent" Property="IsEnabled" Value="False" />
								<Setter TargetName="Bg" Property="Opacity" Value="{StaticResource ReadonlyOpacity}" />
								<Setter TargetName="PART_ContentHost" Property="Opacity" Value="{StaticResource ReadonlyOpacity}" />
								<Setter TargetName="Label" Property="Opacity" Value="{StaticResource ReadonlyOpacity}" />
							</Trigger>-->
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</UserControl.Resources>

	<Border>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="100" />
				<RowDefinition Height="*" />
				<RowDefinition Height="150" />
			</Grid.RowDefinitions>

			<Border Width="500" HorizontalAlignment="Center"
					 VerticalAlignment="Center" Padding="20"
					 Background="#161633"
				      Height="400" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
				<StackPanel Orientation="Vertical" VerticalAlignment="Center">
					<Image
						Source="pack://application:,,,/NV.CT.UI.Controls;component/icons/lock.png"
						Width="80" Margin="0 10 0 30"/>

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="360">
						<TextBlock
						FontSize="16" Opacity="0.6"
						Text="Welcome back , " />
						<TextBlock FontSize="16" Text="{Binding Path=Username,Mode=TwoWay}"></TextBlock>
					</StackPanel>
					
					<TextBlock
						Margin="0,10,30,10"
						HorizontalAlignment="Center"
						VerticalAlignment="Center" Visibility="Collapsed"
						FontSize="16" Opacity="0.6"
						Text="Please input password to unlock " />

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 10" Width="360">
						<PasswordBox x:Name="txtPassword"
						Height="40" Width="240"
						model:PasswordBoxHelper.Password="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						Style="{StaticResource MyPasswordBox}">
							<b:Interaction.Behaviors>
								<model:PasswordBoxBehavior />
							</b:Interaction.Behaviors>
						</PasswordBox>
						<Button
							Width="100" Margin="10 0 0 0"
							HorizontalAlignment="Center"
							BorderThickness="0"
							Command="{Binding Commands[UnlockCommand]}"
							Content="unlock"
							IsDefault="True"
							Style="{StaticResource ProtocolButtonStyle}"
							Template="{StaticResource ButtonTemplate}">
							<Button.Resources>
								<Style TargetType="{x:Type Border}">
									<Setter Property="CornerRadius" Value="20" />
								</Style>
							</Button.Resources>
						</Button>
					</StackPanel>

					<!--  提示区域  -->
					<TextBlock
						HorizontalAlignment="Center" Width="360"
						VerticalAlignment="Center" LineHeight="24"
						FontSize="16" TextWrapping="WrapWithOverflow"
						Foreground="#FFA63F"
						Opacity="1"
						Text="{Binding ValidationMsg,Mode=TwoWay}" />

				</StackPanel>
			</Border>

			<Grid
			Grid.Row="2"
			Margin="0,0,0,0"
			Background="Transparent">

				<!--  switch user  -->
				<Grid
				Margin="0,0,100,0"
				HorizontalAlignment="Right"
				VerticalAlignment="Center">
					<StackPanel Orientation="Horizontal">

						<Button
			x:Name="BtnLogin"
			Width="36"
			Height="40"
			Margin="3,0,2,0"
			HorizontalAlignment="Left"
			Background="Transparent"
			BorderBrush="Transparent"
			Command="{Binding Commands[SwitchUserCommand]}"
			Cursor="Hand"
			ToolTip="switch user">
							<Button.Content>
								<Path
					Width="20"
					Height="20"
					Data="{StaticResource UserIcon}"
					Fill="{StaticResource IconNormalColor}"
					Stretch="Fill">
									<Path.Style>
										<Style TargetType="Path">
											<Style.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Fill" Value="{StaticResource IconActiveColor}" />
												</Trigger>
												<Trigger Property="IsMouseOver" Value="False">
													<Setter Property="Fill" Value="{StaticResource IconNormalColor}" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</Path.Style>
								</Path>
							</Button.Content>
						</Button>

					</StackPanel>
				</Grid>

			</Grid>

		</Grid>
	</Border>
</UserControl>
