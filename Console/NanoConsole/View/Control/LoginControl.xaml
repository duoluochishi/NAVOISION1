<UserControl
	x:Class="NV.CT.NanoConsole.View.Control.LoginControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:NV.CT.NanoConsole.View.Control"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:md="clr-namespace:MaterialDesignThemes.Wpf.Controls.MarkableTextBox;assembly=MaterialDesignThemes.Wpf"
	xmlns:model="clr-namespace:NV.CT.NanoConsole.Model"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
	d:DesignHeight="450"
	d:DesignWidth="800"
	Foreground="White"
	mc:Ignorable="d">
	<UserControl.Resources>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
		<Style
			x:Key="AddEmergencyGlintButton"
			BasedOn="{StaticResource ToolbarButton}"
			TargetType="Button">
			<Setter Property="Width" Value="100" />
			<Setter Property="Height" Value="85" />
			<Style.Triggers>
				<Trigger Property="Button.IsMouseOver" Value="true">
					<Setter Property="Content">
						<Setter.Value>
							<Path
								VerticalAlignment="Center"
								Fill="White"
								Stretch="Fill"
								Style="{StaticResource Emergency}" />
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="Button.IsMouseOver" Value="false">
					<Setter Property="Content">
						<Setter.Value>
							<Path
								VerticalAlignment="Center"
								Fill="#FFA63F"
								Stretch="Fill"
								Style="{StaticResource Emergency}" />
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate
			x:Key="ButtonTemplate"
			TargetType="{x:Type Button}">
			<Border
				x:Name="Border"
				Background="{TemplateBinding Background}"
				BorderThickness="2"
				CornerRadius="15"
				TextBlock.Foreground="White">
				<!--  设置控件的边框，圆角，背景色，字体颜色  -->
				<ContentPresenter
					Margin="{TemplateBinding Padding}"
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<!--  显示控件的内容  -->
				</ContentPresenter>
			</Border>
		</ControlTemplate>

		<Style
			x:Key="ProtocolButtonStyle"
			BasedOn="{StaticResource MaterialDesignRaisedButton}"
			TargetType="{x:Type Button}">
			<Setter Property="Height" Value="40" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Background" Value="#1665D8" />
			<Setter Property="wpf:ButtonAssist.IsEnable" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Mode=TwoWay}" />
			<Setter Property="Opacity" Value="1" />
			<Setter Property="Border.CornerRadius" Value="100" />
		</Style>

		<Style
			x:Key="MyPasswordBox"
			TargetType="{x:Type PasswordBox}">
			<Setter Property="wpf:ControlAttachProperty.CornerRadius" Value="4" />
			<Setter Property="Height" Value="34" />
			<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplateDownSide}" />
			<Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
			<Setter Property="SelectionBrush" Value="{StaticResource TextSelectionBrush}" />
			<Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
			<Setter Property="FontSize" Value="{StaticResource FontSize}" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Background" Value="{StaticResource BaseBackgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource TextForeground}" />
			<Setter Property="Padding" Value="6,4,6,4" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
			<Setter Property="wpf:ControlAttachProperty.FocusBorderBrush" Value="{StaticResource FocusBorderBrush}" />
			<Setter Property="wpf:ControlAttachProperty.MouseOverBorderBrush" Value="{StaticResource MouseOverBorderBrush}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<!--  英 ['kærət]  美 ['kærət]  插入符号  -->
			<Setter Property="CaretBrush" Value="{StaticResource TextForeground}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type PasswordBox}">
						<Grid x:Name="PART_Root">
							<Border
								x:Name="Bg"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding wpf:ControlAttachProperty.CornerRadius}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<Grid x:Name="PART_InnerGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<!--  Label区域  -->
								<ContentControl
									x:Name="Label"
									Margin="1"
									Content="{TemplateBinding wpf:ControlAttachProperty.Label}"
									Template="{TemplateBinding wpf:ControlAttachProperty.LabelTemplate}" />
								<!--  内容区域  -->
								<ScrollViewer
									x:Name="PART_ContentHost"
									Grid.Column="1"
									Margin="{TemplateBinding Padding}"
									Padding="{TemplateBinding Padding}"
									VerticalAlignment="Stretch"
									VerticalContentAlignment="Center"
									Background="{x:Null}"
									BorderThickness="0"
									IsTabStop="False" />
								<!--  水印  -->
								<TextBlock
									x:Name="Message"
									Grid.Column="1"
									Margin="5,2,5,2"
									Padding="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									IsHitTestVisible="False"
									Opacity="{StaticResource WatermarkOpacity}"
									Text="{TemplateBinding wpf:ControlAttachProperty.Watermark}"
									Visibility="Collapsed" />
								<!--  附加内容区域  -->
								<Border
									x:Name="PART_AttachContent"
									Grid.Column="2"
									Margin="1"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<ContentControl
										VerticalAlignment="Top"
										VerticalContentAlignment="Top"
										Template="{TemplateBinding wpf:ControlAttachProperty.AttachContent}" />
								</Border>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<!--  显示水印  -->
							<DataTrigger
								Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
								Value="">
								<Setter TargetName="Message" Property="Visibility" Value="Visible" />
							</DataTrigger>
							<!--<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" Value="{Binding Path=(wpf:ControlAttachProperty.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" Value="{Binding Path=(wpf:ControlAttachProperty.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
							</Trigger>-->
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource DisableOpacity}" />
							</Trigger>
							<!--  只读时，禁用PART_AttachContent  -->
							<!--<Trigger Property="IsReadOnly" Value="True">
								<Setter TargetName="PART_AttachContent" Property="IsEnabled" Value="False" />
								<Setter TargetName="Bg" Property="Opacity" Value="{StaticResource ReadonlyOpacity}" />
								<Setter TargetName="PART_ContentHost" Property="Opacity" Value="{StaticResource ReadonlyOpacity}" />
								<Setter TargetName="Label" Property="Opacity" Value="{StaticResource ReadonlyOpacity}" />
							</Trigger>-->
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="200" />
			<RowDefinition Height="*" />
			<RowDefinition Height="150" />
		</Grid.RowDefinitions>

		<TabControl
			Grid.Row="1"
			Width="300"
			Height="400"
			HorizontalAlignment="Center"
			HorizontalContentAlignment="Left"
			SelectedIndex="{Binding SelectedTabIndex}">
			<TabItem
				Margin="0"
				HorizontalAlignment="Left"
				HorizontalContentAlignment="Left"
				Header="USER LOGIN">
				<!--  普通登录  -->
				<Grid Margin="0,30">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition Height="30" />
						<RowDefinition Height="60"/>
						<RowDefinition />
					</Grid.RowDefinitions>
					<TextBlock
						Grid.Row="0"
						Margin="0,10,30,10"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						FontSize="12"
						Text="User Name" />
					<md:MarkableTextBox
						x:Name="userNameTextBox"
						Grid.Row="1"
						Height="40"
						VerticalContentAlignment="Center"
						IsEnabled="True"
						Style="{StaticResource MarkableTextBox}"
						Text="{Binding Path=Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

					<TextBlock
						Grid.Row="2"
						Margin="0,10,30,10"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						FontSize="12"
						Text="Password" />
					<PasswordBox
						Grid.Row="3"
						Height="40"
						model:PasswordBoxHelper.Password="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						BorderThickness="0"
						Style="{StaticResource MyPasswordBox}">
						<b:Interaction.Behaviors>
							<model:PasswordBoxBehavior />
						</b:Interaction.Behaviors>
					</PasswordBox>

					<CheckBox VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="4"  Content="remember password" 
							  FontSize="12" Opacity="0.7"
					          IsChecked="{Binding Path=RememberPassword,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
					          Margin="0,4,0,0" Padding="4 0 0 0"
					          Foreground="White"/>

					<!--  提示区域  -->
					<TextBlock
						Grid.Row="5"
						HorizontalAlignment="Left"
						VerticalAlignment="Center" LineHeight="24"
						FontSize="15" TextWrapping="WrapWithOverflow"
						Foreground="#FFA63F"
						Opacity="1"
						Text="{Binding ValidationMsg,Mode=TwoWay}" />

					<Button
						Grid.Row="6"
						Width="380"
						HorizontalAlignment="Center"
						BorderThickness="0"
						Command="{Binding Commands[LoginCommand]}"
						Content="Login"
						IsDefault="True"
						Style="{StaticResource ProtocolButtonStyle}"
						Template="{StaticResource ButtonTemplate}">
						<Button.Resources>
							<Style TargetType="{x:Type Border}">
								<Setter Property="CornerRadius" Value="20" />
							</Style>
						</Button.Resources>
					</Button>

				</Grid>
			</TabItem>
			<TabItem Header="SERVICE LOGIN">
				<!--  service key 登录  -->
				<Grid Margin="0,40">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<TextBlock
						Grid.Row="0"
						Margin="0,10,0,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						FontSize="12"
						Text="Service Key" />
					<StackPanel
						Grid.Row="1"
						HorizontalAlignment="Right"
						Orientation="Horizontal">
						<md:MarkableTextBox
							x:Name="serviceKeyName"
							Width="300"
							Height="39"
							VerticalContentAlignment="Center"
							IsEnabled="True"
							IsReadOnly="True"
							Style="{StaticResource MarkableTextBox}"
							Text="{Binding Path=ChoosedServiceKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<Button
							Width="50"
							Margin="5,0"
							HorizontalAlignment="Center"
							BorderThickness="0"
							Command="{Binding Commands[ChooseServiceKey]}"
							Content="..."
							Style="{StaticResource ProtocolButtonStyle}"
							Template="{StaticResource ButtonTemplate}">
							<Button.Resources>
								<Style TargetType="{x:Type Border}">
									<Setter Property="CornerRadius" Value="20" />
								</Style>
							</Button.Resources>
						</Button>
					</StackPanel>

					<!--  提示区域  -->
					<TextBlock
						Grid.Row="2"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						FontSize="15"
						Foreground="#FFA63F"
						Opacity="1"
						Text="{Binding ValidationMsg}" />

					<Button
						Grid.Row="3"
						Width="400"
						Margin="0,0"
						HorizontalAlignment="Center"
						BorderThickness="0"
						Command="{Binding Commands[LoginWithServiceKey]}"
						Content="Login"
						Style="{StaticResource ProtocolButtonStyle}"
						Template="{StaticResource ButtonTemplate}">
						<Button.Resources>
							<Style TargetType="{x:Type Border}">
								<Setter Property="CornerRadius" Value="20" />
							</Style>
						</Button.Resources>
					</Button>

				</Grid>
			</TabItem>
		</TabControl>

		<StackPanel
			Grid.Row="1" Visibility="{Binding IsDevelopment,Converter={StaticResource BooleanToVisibilityConverter}}"
			Margin="100,0,100,0"
			HorizontalAlignment="Right"
			VerticalAlignment="Center"
			Background="DarkGreen">
			<TextBlock HorizontalAlignment="Center">Test accounts (double-click for quick login)</TextBlock>

			<Grid Margin="5">

				<DataGrid
					Margin="0,0,0,0"
					HorizontalAlignment="Stretch"
					VerticalContentAlignment="Center"
					AutoGenerateColumns="False"
					Background="Transparent"
					BorderThickness="0"
					CanUserSortColumns="False"
					ColumnHeaderHeight="40"
					GridLinesVisibility="Horizontal"
					HorizontalScrollBarVisibility="Auto"
					IsReadOnly="True"
					ItemsSource="{Binding TestAccounts}"
					MouseDoubleClick="Control_OnMouseDoubleClick"
					RowHeight="34"
					SelectionUnit="FullRow"
					VerticalScrollBarVisibility="Auto">
					<DataGrid.Columns>
						<DataGridTextColumn
							Width="200"
							Binding="{Binding Account}"
							Header="account" />

						<DataGridTextColumn
							Width="100"
							Binding="{Binding Password}"
							Header="password" />
					</DataGrid.Columns>
				</DataGrid>
			</Grid>
		</StackPanel>


		<Grid
			Grid.Row="2"
			Margin="0,0,0,0"
			Background="Transparent">

			<!--  底部导航栏  -->
			<Grid
				Margin="0,0,100,0"
				HorizontalAlignment="Right"
				VerticalAlignment="Center">
				<StackPanel Orientation="Horizontal">

					<TextBlock
						x:Name="btnPrev"
						Margin="0,0,50,0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Cursor="Hand"
						FontSize="24"
						MouseLeftButtonDown="BtnPrev_OnMouseLeftButtonDown"
						Opacity="0.3"
						Text="Prev" />

					<TextBlock
						x:Name="skipBtn"
						Margin="0,0,30,0"
						HorizontalAlignment="Right"
						VerticalAlignment="Center"
						Cursor="Hand"
						FontSize="24"
						Visibility="{Binding IsDevelopment,Converter={StaticResource BooleanToVisibilityConverter}}"
						FontWeight="Normal"
						MouseLeftButtonDown="SkipBtn_OnMouseLeftButtonDown"
						Opacity="0.3"
						Text="Skip" />

					<Button
						x:Name="btnEmergency"
						Command="{Binding Commands[EmergencyLoginCommand]}"
						Style="{StaticResource AddEmergencyGlintButton}"
						ToolTip="Emergency" />

				</StackPanel>
			</Grid>

		</Grid>

	</Grid>
</UserControl>
