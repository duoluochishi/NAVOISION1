<Window x:Class="NV.CT.NP.Tools.DataTransfer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:view="clr-namespace:NV.CT.NP.Tools.DataTransfer.View"
        xmlns:vm="clr-namespace:NV.CT.NP.Tools.DataTransfer.ViewModel"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=vm:DummyMainWindowViewModel, IsDesignTimeCreatable=True}"
        Title="临床数据传输工具" Height="650" Width="800"
        WindowStartupLocation="CenterScreen" Closing="Window_Closing">
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <Button Content="Select Copy Path" Command="{Binding SelectPathCommand}"/>
                <TextBlock d:Text="G:\临床实验数据\20250701" Text="{Binding TargetPath}"  Margin="10 0 0 0" VerticalAlignment="Center"/>
            </StackPanel>
            <TextBlock Text="选择导出的数据类型："/>
            <StackPanel Orientation="Horizontal">
                <CheckBox Content="All" Margin="5" IsChecked="{Binding IsAllChecked}"/>
                <CheckBox Content="Dicom" Margin="5" IsChecked="{Binding IsDicomChecked}"/>
                <CheckBox Content="RawData" Margin="5" IsChecked="{Binding IsRawDataChecked}"/>
            </StackPanel>
        </StackPanel>
        <TextBlock Text="选择导出的数据时间范围:" Grid.Row="1" Margin="0 10 0 0"/>
        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0 10 0 0">
            <RadioButton Content="All days" IsChecked="{Binding IsAllDaySelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="TimeRange"/>
            <RadioButton Content="Last 1 day" GroupName="TimeRange" Margin="5 0 0 0"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="0 10 0 0">
            <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsAllDaySelected, Converter={StaticResource BooleanToInverseBooleanConverter}}">
                <TextBlock Text="Begin date:" VerticalAlignment="Center" Margin="0 0 5 0"/>
                <DatePicker SelectedDate="{Binding BeginDate}"/>
                <TextBlock Text="End date:" Margin="10 0 5 0" VerticalAlignment="Center"/>
                <DatePicker SelectedDate="{Binding EndDate}"/>
            </StackPanel>
            <Button Content="Search" Margin="10 0 0 0" Command="{Binding SearchCommand}"/>
        </StackPanel>
        <StackPanel Grid.Row="4" Margin="0 10 0 0">
            <TextBlock Text="Studies:"/>
            <StackPanel Orientation="Horizontal" Height="22">
                <TextBlock Text="Study name or PatientID:" VerticalAlignment="Center"/>
                <TextBox x:Name="txtSearch" Width="200" Margin="5 0 0 0" VerticalContentAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding FilterStudiesCommand}" CommandParameter="{Binding ElementName=txtSearch, Path=Text}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </StackPanel>
        </StackPanel>
        <!--ToDo: 若数据太多考虑分页显示-->
        <DataGrid Grid.Row="5" 
                  x:Name="studytDataGrid"
                  AutoGenerateColumns ="False"
                  SelectionMode="Single"
                  CanUserAddRows="False"
                  ItemsSource="{Binding VStudies}"
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                  Margin="0 10 0 10">
            <DataGrid.Columns>
                <!--CheckBox-->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <CheckBox IsChecked="{Binding DataContext.IsSelectedAll, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Study Name-->
                <DataGridTemplateColumn Header="Study Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox  IsReadOnly="True" Text="{Binding PatientName}" BorderThickness="0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Patient ID-->
                <DataGridTemplateColumn Header="Patient ID">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox IsReadOnly="True" Text="{Binding PatientId}" BorderThickness="0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Study Time-->
                <DataGridTemplateColumn Header="Study Time">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding StudyTime, StringFormat='yyyy/MM/dd HH:mm:ss'}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Body Part-->
                <DataGridTemplateColumn Header="Body Part">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding BodyPart}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--Export Status-->
                <DataGridTemplateColumn Header="Export Status">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ExportStatus, Converter={StaticResource ExportStatus2StrConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Error Message" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ErrorMessage, Mode=OneWay, NotifyOnSourceUpdated=True}" ToolTip="{Binding ErrorMessage, Mode=OneWay, NotifyOnSourceUpdated=True}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Horizontal" Grid.Row="6" HorizontalAlignment="Right">
            <Button Content="Export" Margin="0 0 10 0" Command="{Binding BeginxportCommand}"/>
            <Button Content="Cancel" Click="Button_Click"/>
        </StackPanel>
        <Grid x:Name="loadingGrid" Background="Black" Opacity="0.5" Grid.RowSpan="7" Visibility="{Binding IsShowLoading, Converter={StaticResource BooleanToVisibilityConverter}}"> 
            <view:LoadingControl Text="Loading..."/>
        </Grid>
    </Grid>
</Window>
