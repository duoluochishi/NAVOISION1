<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Calibration_CalibrationItems" xml:space="preserve">
    <value>Calibration Items</value>
    <comment>校准项目</comment>
  </data>
  <data name="Calibration_CancelRunningTheCalibrationScenario" xml:space="preserve">
    <value>Canceled running the calibration scenario</value>
    <comment>取消运行校准场景</comment>
  </data>
  <data name="Calibration_Comma_FailedToPrepareScanParam" xml:space="preserve">
    <value>, due to prepare ScanParam failed, param Protocols[{0}] = {1}</value>
    <comment>，原因是准备扫描参数失败，参数Protocols[{0}] = {1}</comment>
  </data>
  <data name="Calibration_Confirm_GotoNextStep" xml:space="preserve">
    <value>Are you sure go to the next step?</value>
    <comment>您确认进入下一步操作？</comment>
  </data>
  <data name="Calibration_Confirm_Redo" xml:space="preserve">
    <value>Are you sure you want to redo?</value>
    <comment>您确认要重做吗？</comment>
  </data>
  <data name="Calibration_Frame_Progress" xml:space="preserve">
    <value>Frame: {0} / {1}</value>
    <comment>帧：{0} / {1}</comment>
  </data>
  <data name="Calibration_History" xml:space="preserve">
    <value>History</value>
    <comment>历史</comment>
  </data>
  <data name="Calibration_Next" xml:space="preserve">
    <value>Next</value>
    <comment>下一步</comment>
  </data>
  <data name="Calibration_Protocol" xml:space="preserve">
    <value>Protocol</value>
    <comment>协议</comment>
  </data>
  <data name="Calibration_Raw" xml:space="preserve">
    <value>Raw</value>
    <comment>生数据</comment>
  </data>
  <data name="Calibration_Redo" xml:space="preserve">
    <value>Redo</value>
    <comment>重做</comment>
  </data>
  <data name="Calibration_Scanning_Attention" xml:space="preserve">
    <value>Scanning Attention</value>
    <comment>扫描注意事项</comment>
  </data>
  <data name="Calibration_Scanning_Attention_Content" xml:space="preserve">
    <value>1.No occlusion in the X-ray coverage;
2.No one in the scanning room;
3.Closed the scanning room.</value>
    <comment>1、X射线覆盖范围内无任何遮挡物；
2、扫描室内无人；
3、扫描室关闭。</comment>
  </data>
  <data name="Calibration_Scan_Progress_Doing_Formatter" xml:space="preserve">
    <value>Scan progress: {0}/{1}</value>
    <comment>Scan progress: {0}/{1}</comment>
  </data>
  <data name="Calibration_Scan_Progress_Done_Formatter" xml:space="preserve">
    <value>Scan progress: {0}/{1}，Done</value>
    <comment>Scan progress: {0}/{1}，Done</comment>
  </data>
  <data name="Calibration_Scenario" xml:space="preserve">
    <value>Scenario</value>
    <comment>场景</comment>
  </data>
  <data name="Calibration_Selection" xml:space="preserve">
    <value>Selection</value>
    <comment>选择</comment>
  </data>
  <data name="Calibration_StartRunningScenario" xml:space="preserve">
    <value>Start running the calibration scenario "{0}"</value>
    <comment>开始运行校准场景 "{0}"</comment>
  </data>
  <data name="Calibration_StartRunningTheCalibrationProject" xml:space="preserve">
    <value>Start running the calibration project "{0}"</value>
    <comment>开始运行校准项目 "{0}"</comment>
  </data>
  <data name="Calibration_TipOnExiting" xml:space="preserve">
    <value>The calibration task is in progress, please do not leave. 
If you're sure you want to leave, stop the task before you leave.</value>
    <comment>校准任务正在进行中，请勿离开。
如果确定要离开，请停止任务运行后再离开。</comment>
  </data>
</root>