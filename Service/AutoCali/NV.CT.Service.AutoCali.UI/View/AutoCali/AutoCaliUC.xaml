<UserControl x:Class="NV.CT.Service.AutoCali.UI.AutoCaliUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NV.CT.Service.AutoCali.UI"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:calc="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:res="clr-namespace:NV.CT.Service.Common.Resources;assembly=NV.CT.Service.Common"
             xmlns:markableTextBox="clr-namespace:MaterialDesignThemes.Wpf.Controls.MarkableTextBox;assembly=MaterialDesignThemes.Wpf"
             mc:Ignorable="d" Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded"
             d:DesignHeight="800" d:DesignWidth="1480">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/CommonResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--ToDo:暂时添加AdornerDecorator作为View的父节点，避免MCS的皮肤库解析错误“VisualParents Must have AdornerDecorator!”-->
    <AdornerDecorator>
        <TabControl>

            <TabItem Header="{x:Static res:Calibration_Lang.Calibration_Selection}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="*" MinWidth="800"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="165"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <GroupBox Grid.Row="0" Margin="5" IsEnabled="{calc:Binding CaliTask.StartCommandEnabled,Mode=OneWay}">
                                <GroupBox.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{x:Static res:Calibration_Lang.Calibration_Scenario}" DockPanel.Dock="Left"/>
                                        <Button Grid.Column="1" x:Name="addBtn" Background="Transparent" BorderThickness="0"
                                                Visibility="Collapsed"
                                                Command="{Binding AddCommand}" CommandParameter="{Binding RelativeSource={x:Static RelativeSource.Self}}">
                                            <Path Style="{StaticResource plusPathIconStyle}"/>
                                        </Button>
                                    </Grid>
                                </GroupBox.Header>

                                <ListView x:Name="listItems" Grid.Column="1" ItemsSource="{Binding CaliScenarioList}"
                                          SelectedItem="{Binding CaliScenarioList.SelectedItem}">
                                    <ListView.ContextMenu>
                                        <ContextMenu Visibility="Collapsed">
                                            <MenuItem x:Name="editMenuItem" Header="{x:Static res:Common_Lang.Common_Edit}"
                                                      Command="{Binding EditCommand}" CommandParameter="{Binding RelativeSource={x:Static RelativeSource.Self}}"/>
                                            <MenuItem x:Name="deleteMenuItem" Header="{x:Static res:Common_Lang.Common_Delete}"
                                                      Command="{Binding DeleteCommand}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=listItems}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Grid.Column="1" Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </GroupBox>

                            <GroupBox Grid.Row="1" Grid.Column="0" Margin="5"  DataContext="{Binding CaliTask}">
                                <GroupBox.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{x:Static res:Calibration_Lang.Calibration_CalibrationItems}" Grid.Column="0"/>
                                        <CheckBox x:Name="allCheckBox" Content="All" IsChecked="False" Click="AllCheckBox_Click"  Grid.Column="1"/>

                                    </Grid>
                                </GroupBox.Header>

                                <ListView x:Name="caliProjectList" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding CaliItemTaskViewModels}"
                                          SelectedItem="{Binding SelectedCaliItemTaskViewModel}"
                                          ItemTemplate="{StaticResource caliProjectTemplate}">
                                </ListView>
                            </GroupBox>
                        </Grid>

                        <!--左右分割条-->
                        <GridSplitter Grid.Column="1" Style="{StaticResource HorizontalGridSplitterStyle}"/>

                        <!--校准项目运行-->
                        <local:AutoCaliTaskUC Grid.Column="2" HorizontalAlignment="Stretch" DataContext="{Binding CaliTask}" />
                    </Grid>

                    <Grid x:Name="footerContainer" Grid.Row="1" Margin="5" DataContext="{Binding CaliTask}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <markableTextBox:MarkableTextBox x:Name="logTextBox" Grid.Column="0" Text="{Binding TaskOutput}" VerticalScrollBarVisibility="Visible" Height="60"
                                 IsReadOnly="True" TextWrapping="Wrap" VerticalAlignment="Stretch" VerticalContentAlignment="Top"
                                 HorizontalContentAlignment="Left">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:CallMethodAction MethodName="ScrollToEnd"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </markableTextBox:MarkableTextBox>

                            <ToggleButton Grid.Column="1" Click="LogToggleButton_Click"/>
                        </Grid>

                        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="{x:Static res:Common_Lang.Common_Go}"
                                        IsEnabled="{calc:Binding StartCommandEnabled,Mode=OneWay}"
                                        MinWidth="80" Margin="10,10,10,20">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding StartCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <Button Grid.Column="0" x:Name="nextBtn" Command="{Binding NextCommand}" 
                                    Content="{x:Static res:Calibration_Lang.Calibration_Next}" 
                                    IsEnabled="{calc:Binding NextCommandEnabled,Mode=OneWay}"
                                    MinWidth="80" Margin="10,10,10,20">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding IsAutoNext}" Value="true">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <Button Grid.Column="1" x:Name="redoBtn" Command="{Binding RedoCommand}" 
                                    Content="{x:Static res:Calibration_Lang.Calibration_Redo}" 
                                    IsEnabled="{calc:Binding NextCommandEnabled,Mode=OneWay}"
                                    MinWidth="80" Margin="10,10,10,20">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding IsAutoNext}" Value="true">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <Button Content="Stop All"
                                        IsEnabled="{calc:Binding !StartCommandEnabled,Mode=OneWay}"
                                        MinWidth="80" Margin="10,10,10,20">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding StopAllCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="{x:Static res:Calibration_Lang.Calibration_History}">
                <GroupBox Grid.Row="2" Margin="5" Header="{x:Static res:Calibration_Lang.Calibration_History}">
                    <ListView x:Name="historyListView" Grid.Row="1" VerticalAlignment="Stretch"
                              ItemsSource="{Binding CaliHistoryList}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding OperationObject}"/>
                                    <TextBlock Text="{Binding CreatedTime}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </GroupBox>

            </TabItem>

            <TabItem Header="Tools" Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*" MinWidth="600"/>
                    </Grid.ColumnDefinitions>

                    <!-- 左侧列表 -->
                    <!--<ListBox x:Name="listBox" SelectionChanged="OnSelectionChanged" VerticalAlignment="Stretch" BorderThickness="1" BorderBrush="Red">
                        <ListBoxItem Tag="{x:Type views:MergeDefectControl}">Merge Defect</ListBoxItem>
                        <ListBoxItem Tag="{x:Type views:ManualDefectControl}">Manual Defect</ListBoxItem>
                    </ListBox>-->
                    <!-- 右侧内容显示区域 -->
                    <Border  BorderThickness="1" BorderBrush="Green" Grid.Column="2">
                        <ContentControl x:Name="contentControl" />
                    </Border>
                </Grid>
            </TabItem>

        </TabControl>
    </AdornerDecorator>
</UserControl>