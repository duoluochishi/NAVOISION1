<UserControl
    x:Class="NV.CT.Service.TubeCali.Views.TubeCaliView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:calc="clr-namespace:CalcBinding;assembly=CalcBinding"
    xmlns:framework="clr-namespace:NV.CT.Service.Common.Framework;assembly=NV.CT.Service.Common"
    xmlns:res="clr-namespace:NV.CT.Service.Common.Resources;assembly=NV.CT.Service.Common"
    xmlns:models="clr-namespace:NV.CT.Service.TubeCali.Models"
    xmlns:viewModels="clr-namespace:NV.CT.Service.TubeCali.ViewModels"
    x:Name="Root"
    d:DesignHeight="450"
    d:DesignWidth="1200"
    d:DataContext="{d:DesignInstance Type=viewModels:TubeCaliViewModel}"
    mc:Ignorable="d"
    Loaded="Root_Loaded"
    Unloaded="Root_Unloaded">
    <UserControl.Resources>
        <framework:ProxyData x:Key="UCDataContext" Data="{Binding DataContext, ElementName=Root}" />
        <Style x:Key="CenterStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style
            x:Key="DataGridColumnHeaderCenterStyle"
            TargetType="{x:Type DataGridColumnHeader}"
            BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ServiceCommonButton}">
            <Setter Property="Height" Value="32" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Image
                Margin="20 0"
                Width="60"
                Height="60"
                Source="pack://application:,,,/NV.CT.UI.Controls;component/Icons/DoseWarning.png" />
            <TextBlock
                FontSize="16"
                Foreground="#FFC000"
                VerticalAlignment="Center"
                TextWrapping="Wrap">
                <Run Text="Please confirm nobody is in the scan room." />
                <LineBreak />
                <Run Text="Click Start to tube calibration." />
            </TextBlock>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="350" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="5" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <DataGrid
                Grid.Row="0"
                Grid.Column="0"
                IsReadOnly="True"
                ColumnHeaderStyle="{StaticResource DataGridColumnHeaderCenterStyle}"
                ItemsSource="{Binding SourceComponents}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <CheckBox
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                IsEnabled="{calc:Binding '!Data.IsDoingCali and !Data.IsDoingCheck', Mode=OneWay, Source={StaticResource UCDataContext}}"
                                IsChecked="{Binding Data.AllChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource UCDataContext}}"
                                Command="{Binding Data.AllCheckedChangedCommand, Source={StaticResource UCDataContext}}" />
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    x:Name="ItemCheckBox"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsEnabled="{calc:Binding '!Data.IsDoingCali and !Data.IsDoingCheck', Mode=OneWay, Source={StaticResource UCDataContext}}"
                                    IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding Data.ItemCheckedChangedCommand, Source={StaticResource UCDataContext}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Header="{x:Static res:Common_Lang.Common_Number}"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding Number}" />
                    <DataGridTextColumn
                        Header="{x:Static res:Common_Lang.Common_Status}"
                        Width="*"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding Status}" />
                    <DataGridTextColumn
                        Header="{x:Static res:Common_Lang.MapUI_Scan_Voltage}"
                        Width="*"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding Voltage, StringFormat={}{0,6:F1}}" />
                    <DataGridTextColumn
                        Header="{x:Static res:Common_Lang.MapUI_Scan_Current}"
                        Width="*"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding Current, StringFormat={}{0,6:F1}}" />
                    <DataGridTextColumn
                        Header="{x:Static res:Common_Lang.MapUI_Scan_ExposureTime}"
                        Width="*"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding ExposureTime, StringFormat={}{0,6:F1}}" />
                    <DataGridTextColumn
                        Header="Oil Temperature"
                        Width="*"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding OilTemperature, StringFormat={}{0,7:F2}}" />
                    <DataGridTextColumn
                        Header="Thermal Capacity"
                        Width="*"
                        ElementStyle="{StaticResource CenterStyle}"
                        Binding="{Binding ThermalCapacity, StringFormat={}{0,7:F2}}" />
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel
                Grid.Row="2"
                Grid.Column="0"
                Orientation="Horizontal">
                <TextBlock
                    VerticalAlignment="Center"
                    Text="Calibration parallel count" />
                <TextBox
                    MinWidth="100"
                    Margin="10,0"
                    VerticalAlignment="Stretch"
                    IsEnabled="{calc:Binding '!IsDoingCali and !IsDoingCheck', Mode=OneWay}"
                    Text="{Binding TubeCaliParallelCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Button
                    Margin="10,0"
                    IsEnabled="{calc:Binding '!IsDoingCali and !IsDoingCheck', Mode=OneWay}"
                    Content="Start Calibration"
                    Command="{Binding StartCalibrationCommand}" />
                <Button
                    Margin="10,0"
                    IsEnabled="{calc:Binding 'IsDoingCali and !IsDoingCheck', Mode=OneWay}"
                    Content="Stop Calibration"
                    Command="{Binding StopCalibrationCommand}" />
                <Button
                    Margin="10,0"
                    IsEnabled="{calc:Binding '!IsDoingCali and !IsDoingCheck', Mode=OneWay}"
                    Content="Start Result Check"
                    Command="{Binding StartResultCheckCommand}" />
                <Button
                    Margin="10,0"
                    IsEnabled="{calc:Binding '!IsDoingCali and IsDoingCheck', Mode=OneWay}"
                    Content="Stop Result Check"
                    Command="{Binding StopResultCheckCommand}" />
            </StackPanel>
            <Border
                Grid.Row="0"
                Grid.Column="2"
                Grid.RowSpan="3"
                Background="Black"
                Style="{StaticResource WindowsBorder}">
                <ItemsControl x:Name="ConsoleControl" Margin="5" ItemsSource="{Binding Histories, Mode=OneWay}">
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer Padding="5" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:HistoryRecord}">
                            <TextBlock TextWrapping="Wrap">
                                <Run Text="{Binding DateTime, StringFormat=yyyy-MM-dd HH:mm:ss}" />
                                <Run Text=" " />
                                <Run Text="{Binding Message}" />
                            </TextBlock>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Grid>
    </Grid>
</UserControl>