<UserControl
    x:Class="NV.CT.Recon.View.TaskListControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:NV.CT.UI.Controls.Converter;assembly=NV.CT.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    x:Name="TaskListContainer"
    d:DesignHeight="450"
    d:DesignWidth="340"
    mc:Ignorable="d">
    <UserControl.Resources>
        <SolidColorBrush
            x:Key="SelectedColor"
            Color="#494962" />
        <converter:ItemIndexConverter x:Key="ItemIndexConverter" />
        <!--<converter:ScanStateStatusConverter x:Key="ScanStateStatusConverter" />-->
        <Style
            x:Key="TaskListButtonStyle"
            BasedOn="{StaticResource MaterialDesignRaisedButton}"
            TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="15px" />
            <Setter Property="Foreground" Value="{StaticResource BaseForegroundColor}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="{StaticResource ButtonMainBackground}" />
            <Setter Property="wpf:ButtonAssist.CornerRadius" Value="0" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Padding" Value="10,0,0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="DevButtonStyle" BasedOn="{StaticResource TaskListButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Green" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="TaskListBoxItemStyle"
            BasedOn="{StaticResource MaterialDesignListBoxItem}"
            TargetType="{x:Type ListViewItem}">
            <Setter Property="Padding" Value="8,1,8,1" />
        </Style>
        <Style
            x:Key="TaskListBoxStyle"
            BasedOn="{StaticResource MaterialDesignListBox}"
            TargetType="{x:Type ListView}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource TaskListBoxItemStyle}" />
            <Setter Property="Background" Value="#16162B" />
            <Setter Property="MaxHeight" Value="400" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style
            x:Key="TaskListContextMenueEx"
            TargetType="ContextMenu">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border
                            Margin="2"
                            Background="#16162B"
                            BorderBrush="#5a5a89"
                            BorderThickness="1"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <ItemsPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="PathStyle"
            BasedOn="{StaticResource SEnhance}"
            TargetType="{x:Type Path}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="PathLineStyle"
            TargetType="{x:Type Path}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <StackPanel
        Margin="0"
        HorizontalAlignment="Stretch"
        Orientation="Vertical">
        <Border
            HorizontalAlignment="Stretch"
            Background="#2A2A47"
            BorderThickness="0"
            CornerRadius="10 10 0 0"
            Style="{StaticResource WindowsBorder}">
            <StackPanel
                Height="38"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                Cursor="Hand"
                IsEnabled="{Binding Path=IsExaming, Mode=TwoWay}"
                Orientation="Horizontal">
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding Commands[BackProtocolSelectCommand]}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
                <Path
                    Width="16"
                    Height="16"
                    Margin="5,1,0,0"
                    Fill="{StaticResource TextBoxBrush}"
                    IsEnabled="{Binding Path=IsEnhanceTitle, Mode=TwoWay}"
                    Stretch="Fill"
                    Style="{StaticResource PathStyle}" />
                <Label
                    Width="247"
                    Margin="5,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Left"
                    Content="{Binding Path=TaskListTitle, Mode=TwoWay}"
                    FontFamily="Microsoft YaHei"
                    FontSize="15"
                    Foreground="White" />
            </StackPanel>
        </Border>
        <StackPanel
            Margin="0"
            Orientation="Vertical">
            <!--  协议列表  -->
            <ListView
                IsEnabled="{Binding TaskListEnable}"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding Path=TaskList, Mode=TwoWay}"
                SelectedItem="{Binding Path=SelectedTask, Mode=TwoWay}"
                SelectedValuePath="ScanRangeID"
                Style="{StaticResource TaskListBoxStyle}">
                <!--  右键菜单  cut copy paste repeat  -->
                <!--<ListView.ContextMenu>
                    <ContextMenu Placement="MousePoint">
                        <MenuItem
                            Command="{Binding Commands[CutCommand]}"
                            Header="{x:Static res:LanguageResource.Header_MenuItem_Cut}"
                            IsEnabled="{Binding Path=PageEnable}">
                            <MenuItem.Icon>
                                <Path
                                    Fill="{StaticResource TextBoxBrush}"
                                    Stretch="Fill"
                                    Style="{StaticResource IconCut}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding Commands[CopyCommand]}"
                            Header="{x:Static res:LanguageResource.Header_MenuItem_Copy}">
                            <MenuItem.Icon>
                                <Path
                                    Fill="{StaticResource TextBoxBrush}"
                                    Stretch="Fill"
                                    Style="{StaticResource IconCopy}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding Commands[PasteCommand]}"
                            Header="{x:Static res:LanguageResource.Header_MenuItem_Paste}">
                            <MenuItem.Icon>
                                <Path
                                    Fill="{StaticResource TextBoxBrush}"
                                    Stretch="Fill"
                                    Style="{StaticResource IconPaste}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding Commands[RepeatCommand]}"
                            Header="{x:Static res:LanguageResource.Header_MenuItem_Repeat}">
                            <MenuItem.Icon>
                                <Path
                                    Fill="{StaticResource TextBoxBrush}"
                                    Stretch="Fill"
                                    Style="{StaticResource IconRepeat}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>-->
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid
                            Height="36"
                            Margin="2,0,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.Commands[TaskListItemCommand], ElementName=TaskListContainer}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Image
                                Grid.Column="0"
                                Width="12"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="{Binding Path=ImageScanType}" />
                            
                            <StackPanel
                                Grid.Column="1"
                                Orientation="Horizontal">
                                <TextBlock
                                    Margin="3,2,8,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="Arial"
                                    FontSize="10"
                                    Text="{Binding Converter={StaticResource ItemIndexConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" />
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Text="{Binding Path=TaskName, Mode=TwoWay}" />
                            </StackPanel>
                            <Path
                                Grid.Column="2"
                                Width="8"
                                Height="36"
                                Margin="4,0,4,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Data="{Binding Path=IconLineData, Mode=OneWay}"
                                Fill="White"
                                IsEnabled="{Binding Path=IconLineShow, Mode=TwoWay}"
                                Stretch="None"
                                Stroke="White"
                                Style="{StaticResource PathLineStyle}" />
                            <Path
                                Grid.Column="3"
                                Width="20"
                                Height="20"
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                Fill="White"
                                IsEnabled="{Binding Path=SEnhanceShow, Mode=TwoWay}"
                                Stretch="Fill"
                                Style="{StaticResource PathStyle}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Button
                Padding="26,0,0,0"
                Command="{Binding Commands[OpenReconCommand]}"
                Content="{x:Static res:LanguageResource.Content_Reconstruction}"
                Style="{StaticResource TaskListButtonStyle}" />
            <Button
                Padding="26,0,0,0"
                Command="{Binding Commands[ScanClosedCommand]}"
                Content="{x:Static res:LanguageResource.Content_Close}"
                Style="{StaticResource TaskListButtonStyle}" />
            <Button
                Padding="26,0,0,0"
                IsEnabled="{Binding IsDevelopment}"
                Command="{Binding Commands[GetProtocolContentCommand]}"
                Content="Get Protocol Content"
                Style="{StaticResource DevButtonStyle}" />
        </StackPanel>
    </StackPanel>
</UserControl>