<Window x:Class="NV.CT.PatientManagement.View.English.StudyListColumnsConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
        xmlns:local="clr-namespace:NV.CT.PatientManagement.View.English" 
        xmlns:converter="clr-namespace:NV.CT.UI.Controls.Converter;assembly=NV.CT.UI.Controls"
        mc:Ignorable="d"
        Background="Transparent" ResizeMode="NoResize" AllowsTransparency="True" WindowStyle="None"
        Height="750" Width="400">
    <Window.Resources>
        <converter:BooleanToInverseBooleanConverter x:Key="BooleanToInverseBooleanConverter" />
    </Window.Resources>
    <Border CornerRadius="10" Style="{StaticResource WindowsBorder}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Border Style="{StaticResource WindowContentBorder}" />
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource TileTextBlock}" Text="{x:Static res:LanguageResource.Content_ColumnConfig}" />
                <Button Grid.Column="1" Style="{StaticResource TileCloseButtonStyle}" 
                        ToolTip="{x:Static res:LanguageResource.Content_Close}"
                        Command="{Binding  Commands[CloseCommand]}" 
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                    <Path Style="{StaticResource TileClosePathStyle}" />
                </Button>
            </Grid>
            <Grid Grid.Row="1">
                <Border BorderBrush="#3b3b5f" BorderThickness="1" Background="#14142B" CornerRadius="10" Margin="4,4,4,0">
                    <ListBox SelectionMode="Single" BorderThickness="0" BorderBrush="#3b3b5f" Margin="4,4,4,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             Style="{StaticResource MaterialDesignListBox}" ItemsSource="{Binding ColumnItemList, Mode=TwoWay}" SelectedItem="{Binding SelectedColumnItem}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox HorizontalAlignment="Stretch" Content="{Binding ItemName}" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                          IsEnabled="{Binding IsFixed, Converter={StaticResource BooleanToInverseBooleanConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Unchecked">
                                            <i:InvokeCommandAction Command="{Binding DataContext.Commands[ClickColumnConfigCommand], RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                                   CommandParameter="{Binding ItemName}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Checked">
                                            <i:InvokeCommandAction Command="{Binding DataContext.Commands[ClickColumnConfigCommand], RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                                   CommandParameter="{Binding ItemName}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Grid>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="btnMoveUp" Width="30" Height="35" Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                        ToolTip="{x:Static res:LanguageResource.ToolTip_MoveUp}"
                        Command="{Binding Commands[MoveUpCommand]}" IsEnabled="{Binding IsUpEnabled}">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="ArrowUpBold" Foreground="White" VerticalAlignment="Stretch" />
                    </Button.Content>
                </Button>
                <Button x:Name="btnMoveDown" Width="30" Height="35" Margin="0,0,110,0" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                        ToolTip="{x:Static res:LanguageResource.ToolTip_MoveDown}"
                        Command="{Binding Commands[MoveDownCommand]}" IsEnabled="{Binding IsDownEnabled}">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="ArrowDownBold" Foreground="White" VerticalAlignment="Stretch" />
                    </Button.Content>
                </Button>                
                <Button x:Name="btnSave"  Width="90" Height="35" Margin="0,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        Content="{x:Static res:LanguageResource.Content_Apply}" Command="{Binding Commands[SaveCommand]}">
                </Button>                
                <Button x:Name="btnClose" Width="90" Height="35" Margin="0,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        Content="{x:Static res:LanguageResource.Content_Cancel}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Commands[CloseCommand]}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</Window>
