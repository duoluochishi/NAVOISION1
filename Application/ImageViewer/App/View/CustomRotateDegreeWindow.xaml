<Window
    x:Class="NV.CT.ImageViewer.View.CustomRotateDegreeWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NV.CT.ImageViewer.Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="clr-namespace:MaterialDesignThemes.Wpf.Controls.MarkableTextBox;assembly=MaterialDesignThemes.Wpf"
    xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
    Title="CustomRotateDegreeWindow"
    Width="250"
    Height="250"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <SolidColorBrush x:Key="BorderColor">#16162B</SolidColorBrush>
        <Style x:Key="NBorderBaseStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource BorderColor}" />
            <Setter Property="CornerRadius" Value="10,10,10,10" />
            <Setter Property="BorderBrush" Value="#5a5a89" />
            <Setter Property="BorderThickness" Value="0.5" />
        </Style>
        <Style
            x:Key="TileClosePathStyle"
            BasedOn="{StaticResource CloseGeometry}"
            TargetType="Path">
            <Setter Property="Fill" Value="{StaticResource TextBoxBrush}" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Stretch" Value="Fill" />
        </Style>
        <Style
            x:Key="NBorderStyle"
            BasedOn="{StaticResource NBorderBaseStyle}"
            TargetType="{x:Type Border}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5a5a89" />
                    <Setter Property="Opacity" Value="0.3" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridTextColumnCenterStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />

        </Style>
        <Style x:Key="ImgStyle" TargetType="Image">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        <!--<Style TargetType="local:PopupEx" x:Key="Showpopup">
            <Style.Triggers>
                <Trigger Property="IsMouseOver"  Value="True">
                    <Setter Property="IsOpen" Value="True"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="4,8,8,8" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Microsoft YaHei" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <Grid>
        <Border
            Background="#14142B"
            BorderBrush="#5A5A89"
            CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="80" />
                </Grid.RowDefinitions>
                <Border
                    Grid.ColumnSpan="5"
                    Background="#5A5A89"
                    CornerRadius="5, 5, 0, 0"
                    Opacity="0.3" />

                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="13,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Content="{x:Static res:LanguageResource.Content_CustomAngle}"
                    Foreground="White" />
                <Button
                    x:Name="btnClose"
                    Grid.Row="0"
                    Grid.Column="3"
                    Width="22"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Click="BtnClose_OnClick"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <Path Style="{StaticResource TileClosePathStyle}" />
                </Button>

                <Grid
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="5"
                    VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="20" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="10" />
                    </Grid.ColumnDefinitions>

                    <Label
                        Grid.Row="0"
                        Grid.Column="1"
                        Content="{x:Static res:LanguageResource.Content_Angle}" />

                    <md:MarkableTextBox
                        x:Name="txtAngle"
                        Grid.Row="0"
                        Grid.Column="2"
                        VerticalContentAlignment="Center"
                        MaxLength="6"
                        Maximum="360"
                        Minimum="-360"
                        Style="{StaticResource WithValidationMarkableTextBox}"
                        TextType="Decimal">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="Angle"
                                UpdateSourceTrigger="PropertyChanged"
                                ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <local:IntegerValidationRule
                                        ErrorMessage="Please input an integer value."
                                        ValidatesOnTargetUpdated="True"
                                        ValidationTriggered="IntegerValidationRule_ValidationTriggered" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </md:MarkableTextBox>
                </Grid>

                <Grid
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="5"
                    HorizontalAlignment="Center">
                    <Button
                        x:Name="btnOk"
                        Width="100"
                        Height="37"
                        HorizontalAlignment="Center"
                        Click="BtnOk_OnClick"
                        Command="{Binding Commands[SetAngle]}"
                        CommandParameter="{Binding Angle}"
                        Content="{x:Static res:LanguageResource.Content_OK}"
                        IsEnabled="{Binding IsButtonEnabled}" />
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
