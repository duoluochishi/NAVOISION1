<UserControl
    x:Class="NV.CT.ImageViewer.View.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:NV.CT.UI.Controls.Converter;assembly=NV.CT.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
    xmlns:view="clr-namespace:NV.CT.ImageViewer.View"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DesignHeight="1040"
    d:DesignWidth="1900"
    Background="#05050F"
    Focusable="True"
    mc:Ignorable="d">
    <UserControl.Resources>

        <Style x:Key="MaterialDesignTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="Transparent" />
            <!--  Foreground is for the content, not the header  -->
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(TextElement.Foreground)}" />
            <Setter Property="Padding" Value="10,10" />
            <Setter Property="Height" Value="48" />
            <Setter Property="MinWidth" Value="44" />
            <Setter Property="MaxWidth" Value="50" />
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
            <Setter Property="wpf:ColorZoneAssist.Mode" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:ColorZoneAssist.Mode)}" />
            <Setter Property="wpf:ColorZoneAssist.Background" Value="Transparent" />
            <Setter Property="wpf:ColorZoneAssist.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:ColorZoneAssist.Foreground)}" />
            <Setter Property="wpf:TabAssist.HasFilledTab" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:TabAssist.HasFilledTab)}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="SelectHorizontalTabItem">
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleY"
                                    From="0"
                                    To="1"
                                    Duration="0" />
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleX"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    BeginTime="0:0:0.3"
                                    Storyboard.TargetName="PART_BackgroundSelection"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.12"
                                    Duration="0" />
                            </Storyboard>
                            <Storyboard x:Key="SelectVerticalTabItem">
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleX"
                                    From="0"
                                    To="1"
                                    Duration="0" />
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleY"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    BeginTime="0:0:0.3"
                                    Storyboard.TargetName="PART_BackgroundSelection"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.12"
                                    Duration="0" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Root">
                            <!--  This is the Header label ColorZone.  -->
                            <wpf:ColorZone
                                x:Name="ColorZoneHeader"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                wpf:ColorZoneAssist.Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Background)}"
                                wpf:ColorZoneAssist.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}"
                                Focusable="False"
                                Foreground="#3044D9"
                                Mode="Custom">
                                <wpf:Ripple
                                    x:Name="contentPresenter"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Content="{TemplateBinding Header}"
                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Focusable="False"
                                    Opacity=".82"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextBlock.FontSize="14"
                                    TextBlock.FontWeight="Medium"
                                    TextOptions.TextFormattingMode="Ideal"
                                    TextOptions.TextRenderingMode="Auto"
                                    Typography.Capitals="{TemplateBinding Typography.Capitals}" />
                            </wpf:ColorZone>
                            <Border
                                x:Name="SelectionHighlightBorder"
                                BorderBrush="{Binding Path=Foreground, ElementName=ColorZoneHeader}"
                                BorderThickness="0,0,0,2"
                                RenderTransformOrigin="0.5,0.5"
                                Visibility="Hidden">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                                </Border.RenderTransform>
                                <Rectangle
                                    x:Name="PART_BackgroundSelection"
                                    Fill="{TemplateBinding Background}"
                                    Opacity="0.0" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.38" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                                <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="0,2,0,0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="0,0,2,0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="2,0,0,0" />
                            </DataTrigger>

                            <!--  Selected TabItem animations (vary depending on TabControl.TabStripPlacement value)  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectHorizontalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectHorizontalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectVerticalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectVerticalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>

                            <!--  Force the header foreground do be MaterialDesignBody by default (only for not filled tabs)  -->
                            <Trigger Property="wpf:TabAssist.HasFilledTab" Value="False">
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                            </Trigger>

                            <!--  The header foreground color change when focused (only for not filled tabs)  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="Standard" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryLight" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryMid" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryDark" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryLight" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource SecondaryHueLightBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryMid" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryDark" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource SecondaryHueDarkBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="Custom" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="TabItemPatient"
            BasedOn="{StaticResource MaterialDesignTabItem}"
            TargetType="{x:Type TabItem}">
            <Setter Property="MinWidth" Value="140" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>

        <Style
            x:Key="ToolsRadioButton"
            BasedOn="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}"
            TargetType="{x:Type RadioButton}">
            <Setter Property="Command" Value="{Binding Commands[ToolsCommand]}" />
            <Setter Property="MinWidth" Value="0" />
        </Style>

        <Style
            x:Key="InvertRadioButton"
            BasedOn="{StaticResource ToolsRadioButton}"
            TargetType="{x:Type RadioButton}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Path
                                Width="15"
                                Height="15"
                                Fill="White"
                                Stretch="Fill"
                                Style="{StaticResource List02}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Path
                                Width="15"
                                Height="15"
                                Fill="#5A5A89"
                                Stretch="Fill"
                                Style="{StaticResource List02}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="List01RadioButton"
            BasedOn="{StaticResource ToolsRadioButton}"
            TargetType="{x:Type RadioButton}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Path
                                Width="15"
                                Height="15"
                                Fill="White"
                                Stretch="Fill"
                                Style="{StaticResource List01}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Path
                                Width="15"
                                Height="15"
                                Fill="#5A5A89"
                                Stretch="Fill"
                                Style="{StaticResource List01}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ContextMenu">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Grid>
                            <!--<Path Stroke="#353557"  Data="M168,0.5 L18,0.5 C15.3766474,0.5 13.0016474,1.56332372 11.2824856,3.28248558 C9.56332372,5.00164744 8.5,7.37664744 8.5,10 L8.5,53.1900997 L0.668977477,62 L8.5,70.8099003 L8.5,303 C8.5,305.623353 9.56332372,307.998353 11.2824856,309.717514 C13.0016474,311.436676 15.3766474,312.5 18,312.5 L168,312.5 C170.623353,312.5 172.998353,311.436676 174.717514,309.717514 C176.436676,307.998353 177.5,305.623353 177.5,303 L177.5,10 C177.5,7.37664744 176.436676,5.00164744 174.717514,3.28248558 C172.998353,1.56332372 170.623353,0.5 168,0.5 Z"  StrokeThickness="1.6" Fill="#16162B"  HorizontalAlignment="Left">
                        </Path>-->
                            <Border
                                x:Name="my_border"
                                Width="auto"
                                Height="auto"
                                Padding="0"
                                Background="#16162B"
                                BorderBrush="#4F4F79"
                                BorderThickness="1.5,1.5,1.5,1.5"
                                CornerRadius="5"
                                SnapsToDevicePixels="True">
                                <ItemsPresenter Margin="0" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="#16162B" />
        </Style>

        <converter:Visuality2Converter x:Key="Visuality2Converter" />
        <converter:IsSelectedConverter x:Key="IsSelectedConverter" />

        <SolidColorBrush x:Key="BorderBrush" Color="#4F4F79" />

        <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />

        <SolidColorBrush
            x:Key="BorderBrushSelected"
            Opacity="0.7"
            Color="#FFA63F" />

        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <!--<Setter Property="Width" Value="65" />
            <Setter Property="Height" Value="65" />-->
            <Setter Property="Margin" Value="-8,-2,-8,0" />
        </Style>

        <Style x:Key="RDTMaterialDesignListBoxItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="wpf:ListBoxItemAssist.ShowSelection" Value="{Binding Path=(wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource AncestorType=ListBox}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                            <Grid>
                                <Border
                                    x:Name="BorderStyle"
                                    Padding="1"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    Style="{StaticResource BorderStyle}">
                                    <wpf:Ripple
                                        x:Name="Ripple"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Feedback="Transparent"
                                        Focusable="False"
                                        RecognizesAccessKey="False"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <!--<Border
                                    x:Name="MouseOverBorder"
                                    Background="Transparent"
                                    Opacity="0" />
                                <Border
                                    x:Name="SelectedBorder"
                                    Background="Transparent"
                                    Opacity="0" />-->

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".56" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="BorderStyle" Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                                <!--<Setter TargetName="BorderStyle" Property="Visibility" Value="Visible" />-->
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="BorderStyle" Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
                                <!--<Setter TargetName="BorderStyle" Property="Visibility" Value="Hidden" />-->
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ListBoxItemAssist.ShowSelection)}" Value="False">
                                <!--<Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="SelectedBorder" Property="Visibility" Value="Collapsed" />-->
                                <!--<Setter TargetName="Ripple" Property="Feedback" Value="Transparent" />-->
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="SeriesSelectorStyle"
            BasedOn="{StaticResource RDTMaterialDesignListBoxItem}"
            TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="8,2,8,2" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        </Style>
        <Style
            x:Key="ListBoxStyle"
            BasedOn="{StaticResource MaterialDesignListView}"
            TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource SeriesSelectorStyle}" />
        </Style>

        <Style x:Key="MySeparator" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="10" />
            <Setter Property="Margin" Value="0,0" />
            <Setter Property="Padding" Value="0,0" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Background" Value="DarkRed" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="WhiteSmoke" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="80*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="15*" />
        </Grid.ColumnDefinitions>

        <!--  左边的按钮  -->
        <Border
            Grid.Column="0"
            Margin="0,5,0,5"
            Background="#14142B"
            BorderBrush="#5A5A89"
            BorderThickness="1"
            CornerRadius="5">

            <TabControl x:Name="tabContainer" SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabControl.Template>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <!--  Tab Panel  -->
                            <DockPanel>
                                <TabPanel
                                    Background="Transparent"
                                    DockPanel.Dock="Top"
                                    IsItemsHost="True" />
                                <ContentPresenter Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" />
                            </DockPanel>
                        </Grid>
                    </ControlTemplate>
                </TabControl.Template>
                <TabItem Header="{x:Static res:LanguageResource.Content_2D}" Style="{StaticResource MaterialDesignTabItem}">
                    <view:Control2D />
                </TabItem>
                <!--  3D tab页面  -->
                <TabItem Header="{x:Static res:LanguageResource.Content_3D}" Style="{StaticResource MaterialDesignTabItem}">
                    <view:Control3D />
                </TabItem>
            </TabControl>
        </Border>

        <!--  中间的图像控件显示区域  -->
        <Border
            Grid.Column="2"
            Margin="0,5,0,5"
            Background="#05050F"
            BorderBrush="#5A5A89"
            BorderThickness="0"
            CornerRadius="5">
            <!--  内容区域  -->
            <Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Name="container2d"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        AllowDrop="True"
                        Background="Transparent"
                        Content="{Binding ImageViewer2D.WindowsFormsHost}"
                        Visibility="{Binding _2DVisibility}" />
                    <view:ImageViewerScrollBar Grid.Column="1" />
                </Grid>

                <ContentControl
                    Name="container3d"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    AllowDrop="True"
                    Background="Transparent"
                    Content="{Binding ImageViewer3D.WindowsFormsHost}"
                    Visibility="{Binding _3DVisibility}" />

            </Grid>
        </Border>

        <!--  右侧区域border  -->
        <Border
            Grid.Column="4"
            Margin="0,5,0,5"
            Background="#16162B"
            BorderBrush="#5A5A89"
            BorderThickness="1"
            CornerRadius="10">

            <TabControl>
                <!--  当前病人  -->
                <TabItem Header="Current Patient" Style="{StaticResource TabItemPatient}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="130" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="60" />
                        </Grid.RowDefinitions>

                        <!--  检查列表  -->
                        <view:StudyControl Grid.Row="0" />

                        <!--  Series控件  -->
                        <view:SeriesControl Grid.Row="2" />

                        <!--  底部按钮  -->
                        <view:FooterControl Grid.Row="4" />

                    </Grid>
                </TabItem>
                <!--  历史病人  -->
                <TabItem Header="Patient History" Style="{StaticResource TabItemPatient}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="130" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="60" />
                        </Grid.RowDefinitions>

                        <!--  历史检查列表  -->
                        <view:StudyHistoryControl Grid.Row="0" />

                        <!--  历史Series控件  -->
                        <view:SeriesHistoryControl Grid.Row="2" />

                        <!--  底部按钮  -->
                        <view:FooterHistoryControl Grid.Row="4" />

                    </Grid>
                </TabItem>
            </TabControl>

        </Border>

    </Grid>
</UserControl>
