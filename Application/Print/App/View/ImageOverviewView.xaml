<UserControl x:Class="NV.CT.Print.View.ImageOverviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:NV.CT.Print.View"
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
             xmlns:converter="clr-namespace:NV.CT.UI.Controls.Converter;assembly=NV.CT.UI.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:BoolToStyleConverter x:Key="boolToStyleConverter"></converter:BoolToStyleConverter>
        <SolidColorBrush x:Key="BorderBrush" Color="#4F4F79" />
        <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
        <SolidColorBrush x:Key="BorderBrushSelected" Opacity="0.7" Color="#FFA63F" />
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        <Style x:Key="RDTMaterialDesignListBoxItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="wpf:ListBoxItemAssist.ShowSelection" Value="{Binding Path=(wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource AncestorType=ListBox}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}">
                            <Grid>
                                <Border  x:Name="BorderStyle" Padding="1" BorderBrush="{StaticResource TransparentBrush}" Style="{StaticResource BorderStyle}">
                                    <wpf:Ripple x:Name="Ripple" Feedback="Transparent" Focusable="False" RecognizesAccessKey="False"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"  
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".56" />
                            </Trigger>
                            <!--<Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="BorderStyle" Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="BorderStyle" Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
                            </Trigger>-->
                            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ListBoxItemAssist.ShowSelection)}" Value="False">
                            </DataTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SeriesSelectorStyle" BasedOn="{StaticResource RDTMaterialDesignListBoxItem}" TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="8,10,0,6" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        </Style>
        <Style x:Key="ListBoxStyle"  BasedOn="{StaticResource MaterialDesignListView}" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource SeriesSelectorStyle}" />
        </Style>
    </UserControl.Resources>
    <Border>
        <Grid>
            <ListView x:Name="listviewPreview" AllowDrop="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ItemsSource="{Binding ImageModelList}" SelectionMode="Multiple"  Style="{StaticResource ListBoxStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Commands[ImagesSelectionChangedCommand]}" CommandParameter="{Binding ElementName=listviewPreview, Path=SelectedItems}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Margin="0" HorizontalAlignment="Left" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="{Binding DataContext.ItemStandardLength, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Height="{Binding DataContext.ItemStandardLength, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}">
                            <Border Style="{StaticResource GroupedBorder}" Background="#353530" BorderBrush="#353530" Width="{Binding DataContext.OuterlineWidth, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Height="{Binding DataContext.OuterlineHeight, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}">
                                <Image Margin="6" Stretch="Fill" Source="{Binding ImageData}"
                                       Width="{Binding DataContext.ImageActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                       Height="{Binding DataContext.ImageActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                            </Border>
                            <CheckBox Margin="0,0,10,8" wpf:CheckBoxAssist.CheckBoxSize="0"
                                            HorizontalAlignment="Right" VerticalAlignment="Bottom" ToolTip="{Binding Number}" IsChecked="{Binding IsChoosen}">
                                <Path Width="20" Height="20" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            Style="{Binding Path=IsChoosen, Converter={StaticResource boolToStyleConverter}, ConverterParameter='GoldenRightPath:EmptyPath'}"/>
                            </CheckBox>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Border>
</UserControl>
