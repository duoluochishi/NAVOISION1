<UserControl x:Class="NV.CT.Print.View.SeriesListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NV.CT.Print.View"
             mc:Ignorable="d" 
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <SolidColorBrush x:Key="BorderBrush" Color="#4F4F79" />
        <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
        <SolidColorBrush x:Key="BorderBrushSelected" Opacity="0.7" Color="#FFA63F" />
        
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <!--<Setter Property="Width" Value="65" />
            <Setter Property="Height" Value="65" />-->
            <Setter Property="Margin" Value="-8,-2,-8,0" />
        </Style>
        
        <Style x:Key="RDTMaterialDesignListBoxItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="wpf:ListBoxItemAssist.ShowSelection" Value="{Binding Path=(wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource AncestorType=ListBox}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}">
                            <Grid>
                                <Border  x:Name="BorderStyle" Padding="1" BorderBrush="{StaticResource BorderBrush}" Style="{StaticResource BorderStyle}">
                                    <wpf:Ripple x:Name="Ripple" Feedback="Transparent" Focusable="False" RecognizesAccessKey="False"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"  
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <!--<Border
                                    x:Name="MouseOverBorder"
                                    Background="Transparent"
                                    Opacity="0" />
                                <Border
                                    x:Name="SelectedBorder"
                                    Background="Transparent"
                                    Opacity="0" />-->

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".56" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="BorderStyle" Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="BorderStyle" Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ListBoxItemAssist.ShowSelection)}" Value="False">
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SeriesSelectorStyle" BasedOn="{StaticResource RDTMaterialDesignListBoxItem}" TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="8,2,8,2" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        </Style>
        
        <Style x:Key="ListBoxStyle"  BasedOn="{StaticResource MaterialDesignListView}" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource SeriesSelectorStyle}" />
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="56"/> <!-- 0 //SeriesList Section-->
            <RowDefinition Height="*"/>  <!-- 1 //SeriesList-->
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <TextBlock x:Name="lblSeriesInfoSection" Text="{x:Static res:LanguageResource.Content_Series}" 
                           Style="{StaticResource SectionTitleTextBlock}" Margin="8,0,0,0"/>
                    <Rectangle Width="{Binding ElementName=lblSeriesInfoSection,Path=ActualWidth}"
                           Style="{StaticResource SectionTitleUnderlineRectangle}" Margin="8,0,0,14"/>
                </Grid>
                <Grid Grid.Column="1">
                    <RadioButton x:Name="radioButtonListView" GroupName="listView" Margin="0,0,8,0" BorderThickness="0" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Right"
                                 Style="{StaticResource List02RadioButton}" ToolTip="{x:Static res:LanguageResource.ToolTip_ListView}"/>
                    <RadioButton x:Name="radioButtonImageView" GroupName="listView" Margin="0,0,32,0" BorderThickness="0" Cursor="Hand"  VerticalAlignment="Center" HorizontalAlignment="Right" 
                                 IsChecked="True"
                                 Style="{StaticResource List01RadioButton}" ToolTip="{x:Static res:LanguageResource.ToolTip_ImageView}"/>
                </Grid>
            </Grid>
        </Grid>        
        <!--  缩略图排列  -->
        <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              Visibility="{Binding ElementName=radioButtonImageView, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListView Grid.Row="1" AllowDrop="True" IsSynchronizedWithCurrentItem="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ItemsSource="{Binding ImageModels}" SelectedItem="{Binding Path=SelectedImageModel, Mode=TwoWay}" Style="{StaticResource ListBoxStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Commands[ImageViewMouseDoubleClickCommand]}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Margin="5" HorizontalAlignment="Left" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="border" Width="100" Margin="0,5" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Border BorderThickness="0">
                                    <Image Width="65"  Height="65" Margin="5" Stretch="Fill" Source="{Binding ImageSource}" />
                                </Border>
                                <TextBlock Grid.Row="1" HorizontalAlignment="Center" FontSize="12" Text="{Binding Description}" />
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <!--网格排列-->
        <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              Visibility="{Binding ElementName=radioButtonListView, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <DataGrid x:Name="datagridSeries" Grid.Row="1" AutoGenerateColumns="False" IsReadOnly="True" SelectionUnit="FullRow" 
                      ItemsSource="{Binding ImageModels}" SelectedItem="{Binding SelectedImageModel, Mode=TwoWay}"
                      HorizontalAlignment="Stretch" ColumnHeaderHeight="40" GridLinesVisibility="Horizontal" 
                      HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Commands[ImageViewMouseDoubleClickCommand]}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>                
                <DataGrid.Columns>
                    <DataGridTemplateColumn x:Name="Num" Width="auto" Header="{x:Static res:LanguageResource.Content_NO}" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" TextAlignment="Center"
                                           Text="{Binding Number}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="*" Header="{x:Static res:LanguageResource.Content_SeriesDescription}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12"
                                           Text="{Binding Description}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>           
        </Grid>
    </Grid>

</UserControl>
