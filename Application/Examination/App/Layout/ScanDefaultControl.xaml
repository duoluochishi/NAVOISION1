<UserControl
    x:Class="NV.CT.Examination.Layout.ScanDefaultControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:NV.CT.Language;assembly=NV.CT.Language"
    xmlns:view="clr-namespace:NV.CT.UI.Exam.View;assembly=NV.CT.UI.Exam"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"   
    d:DesignHeight="950"
    d:DesignWidth="1950"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style
            x:Key="BaseLiftMargin"
            TargetType="{x:Type Control}">
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>
        <Style
            x:Key="BaseRightStackPanel"
            TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="BorderStyle"
            TargetType="{x:Type Border}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Padding" Value="5,0,5,0" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="ContentControlStyle"
            TargetType="{x:Type ContentControl}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="DetailLabelStyle" BasedOn="{StaticResource NanoLabelStyle}"
            TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0 10 0 0" />
        </Style>
        <Style x:Key="TimeDensityStyle" BasedOn="{StaticResource NanoLabelStyle}"
            TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0 20 0 0" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DetailPathStyle" BasedOn="{StaticResource List01}"
            TargetType="{x:Type Path}">
            <Setter Property="Width" Value="20" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Fill" Value="{StaticResource TextBoxBrush}" />
            <Setter Property="Stretch" Value="Fill" />
        </Style>
        <Style x:Key="TimeDensityWindoStyle"
                TargetType="wpf:PackIcon">
            <Setter Property="Width" Value="25" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Foreground" Value="{StaticResource TextBoxBrush}" />
        </Style>
        <Style
            x:Key="TimeLineBorderStyle" BasedOn="{StaticResource WindowsBorder}"
            TargetType="{x:Type Border}">
            <Setter Property="Height" Value="auto" />
            <Setter Property="Margin" Value="0,5,0,0" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>
        <Style
            BasedOn="{StaticResource MaterialDesignTabItem}"
            TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="Transparent" />
            <!--  Foreground is for the content, not the header  -->
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(TextElement.Foreground)}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="88" />
            <Setter Property="MinWidth" Value="50" />
            <Setter Property="MaxWidth" Value="360" />
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
            <Setter Property="wpf:ColorZoneAssist.Mode" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:ColorZoneAssist.Mode)}" />
            <Setter Property="wpf:ColorZoneAssist.Background" Value="Transparent" />
            <Setter Property="wpf:ColorZoneAssist.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:ColorZoneAssist.Foreground)}" />
            <Setter Property="wpf:TabAssist.HasFilledTab" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}}, Path=(wpf:TabAssist.HasFilledTab)}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="SelectHorizontalTabItem">
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleY"
                                    From="0"
                                    To="1"
                                    Duration="0" />
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleX"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    BeginTime="0:0:0.3"
                                    Storyboard.TargetName="PART_BackgroundSelection"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.12"
                                    Duration="0" />
                            </Storyboard>
                            <Storyboard x:Key="SelectVerticalTabItem">
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleX"
                                    From="0"
                                    To="1"
                                    Duration="0" />
                                <DoubleAnimation
                                    Storyboard.TargetName="ScaleTransform"
                                    Storyboard.TargetProperty="ScaleY"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    BeginTime="0:0:0.3"
                                    Storyboard.TargetName="PART_BackgroundSelection"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.12"
                                    Duration="0" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Root">
                            <!--  This is the Header label ColorZone.  -->
                            <wpf:ColorZone
                                x:Name="ColorZoneHeader"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                wpf:ColorZoneAssist.Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Background)}"
                                wpf:ColorZoneAssist.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}"
                                Focusable="False"
                                Mode="Custom">
                                <wpf:Ripple
                                    x:Name="contentPresenter"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Content="{TemplateBinding Header}"
                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Focusable="False"
                                    Opacity=".82"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextBlock.FontSize="14"
                                    TextBlock.FontWeight="Medium"
                                    TextOptions.TextFormattingMode="Ideal"
                                    TextOptions.TextRenderingMode="Auto"
                                    Typography.Capitals="{TemplateBinding Typography.Capitals}" />
                            </wpf:ColorZone>
                            <Border
                                x:Name="SelectionHighlightBorder"
                                BorderBrush="{Binding Path=Foreground, ElementName=ColorZoneHeader}"
                                BorderThickness="0,0,2,0"
                                RenderTransformOrigin="0.5,0.5"
                                Visibility="Hidden">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                                </Border.RenderTransform>
                                <Rectangle
                                    x:Name="PART_BackgroundSelection"
                                    Fill="{TemplateBinding Background}"
                                    Opacity="0.0" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.38" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                                <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                                <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderBrush" Value="#3B3B5F" />
                                <!--<Setter TargetName="SelectionHighlightBorder" Property="Background" Value="#575766" />-->
                            </Trigger>
                            <DataTrigger
                                Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                Value="Bottom">
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="0,2,0,0" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                Value="Left">
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="0,0,2,0" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                Value="Right">
                                <Setter TargetName="SelectionHighlightBorder" Property="BorderThickness" Value="2,0,0,0" />
                            </DataTrigger>

                            <!--  Selected TabItem animations (vary depending on TabControl.TabStripPlacement value)  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectHorizontalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectHorizontalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectVerticalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectVerticalTabItem}" />
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>

                            <!--  Force the header foreground do be MaterialDesignBody by default (only for not filled tabs)  -->
                            <Trigger Property="wpf:TabAssist.HasFilledTab" Value="False">
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                            </Trigger>

                            <!--  The header foreground color change when focused (only for not filled tabs)  -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="Standard" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource MaterialDesignBody}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryLight" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryMid" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="PrimaryDark" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryLight" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource SecondaryHueLightBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryMid" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="SecondaryDark" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{DynamicResource SecondaryHueDarkBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="wpf:TabAssist.HasFilledTab" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="Custom" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ColorZoneHeader" Property="wpf:ColorZoneAssist.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ColorZoneAssist.Foreground)}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <AdornerDecorator>
        <Grid Background="{StaticResource MaterialDesignBackground}">
            <StackPanel
                Margin="10,5,0,0"
                Style="{StaticResource BaseRightStackPanel}">
                <Border
                    CornerRadius="10"
                    Style="{StaticResource WindowsBorder}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5" />
                            <RowDefinition Height="685" />
                            <RowDefinition
                                Height="*"
                                MinHeight="198" />
                            <RowDefinition Height="5" />
                        </Grid.RowDefinitions>
                        <StackPanel
                            Grid.Row="1"
                            Margin="10,0,0,0"
                            Orientation="Horizontal">
                            <Border Visibility="Visible">
                                <view:LoadStaticDicomControl />
                            </Border>
                            <view:ImageScrollBarControl />
                            <view:ToolsControl Style="{StaticResource BaseLiftMargin}" />
                        </StackPanel>
                        <Grid
                            Grid.Row="2"
                            Margin="10,2,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1100" />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                            </Grid.ColumnDefinitions>

                            <TabControl Grid.Column="0"
                                SelectedIndex="{Binding Path=ActiveParameterPanelIndex}"
                                TabStripPlacement="Left" >
                                <TabItem Header="{x:Static res:LanguageResource.Header_CommanParmsS}">
                                    <Border Style="{StaticResource BorderStyle}">
                                        <ContentControl Style="{StaticResource ContentControlStyle}"
                                            x:Name="ScanParameterContentHolder"/>
                                    </Border>
                                </TabItem>
                                <TabItem Header="{x:Static res:LanguageResource.Header_CommanParmsR}">
                                    <Border Style="{StaticResource BorderStyle}">
                                        <ContentControl Style="{StaticResource ContentControlStyle}"
                                            x:Name="ReconParameterContentHolder"/>
                                    </Border>
                                </TabItem>
                            </TabControl>

                            <StackPanel Grid.Column="1" Orientation="Vertical">
                                <!--  显示详细参数的 按钮  -->
                                <Label ToolTip="{x:Static res:LanguageResource.ToolTip_ParameterDetail}" Style="{StaticResource DetailLabelStyle}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseDown">
                                            <b:InvokeCommandAction
                                                Command="{Binding Commands[ShowParameterDetail]}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <Path Style="{StaticResource DetailPathStyle}" />
                                </Label>
                                <Label ToolTip="{x:Static res:LanguageResource.ToolTip_TimeDensityDetail}" IsEnabled="{Binding IsTimeDensityShowEnable}" Style="{StaticResource TimeDensityStyle}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseDown">
                                            <b:InvokeCommandAction
                                                Command="{Binding Commands[ShowTimeDensityWindow]}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <wpf:PackIcon Kind="ChartBellCurve" Style="{StaticResource TimeDensityWindoStyle}"/>
                                </Label>
                            </StackPanel>
                            <Border Grid.Column="2" Margin="15,3,0,0">
                                <view:ScanPanelControl />
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
                <!--Timeline控件-->
                <Border Style="{StaticResource TimeLineBorderStyle}">
                    <view:Timeline MinHeight="75" />
                </Border>
            </StackPanel>
        </Grid>
    </AdornerDecorator>
</UserControl>